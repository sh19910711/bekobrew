CMAKE_MINIMUM_REQUIRED (VERSION 2.8)
PROJECT (bekobrew)

INCLUDE (CheckFunctionExists)
INCLUDE (ExternalProject)

SET (VENDOR ${CMAKE_SOURCE_DIR}/vendor)

# curl
FIND_LIBRARY (CURL_LIBRARY NAMES curl)

# libyaml
ADD_SUBDIRECTORY (${VENDOR}/libyaml)
INCLUDE_DIRECTORIES (${VENDOR}/libyaml/include)

# liburl
ADD_SUBDIRECTORY (${VENDOR}/liburl)
INCLUDE_DIRECTORIES (${VENDOR}/liburl/include)

# zlib
FIND_PACKAGE (ZLIB)
INCLUDE_DIRECTORIES (${ZLIB_INCLUDE_DIRS})

# bekobrew
SET (BEKOBREW_LIBS yaml ${CURL_LIBRARY} url ${ZLIB_LIBRARIES})
FILE (GLOB BEKOBREW_SOURCES src/*.c src/*/*.c)
INCLUDE_DIRECTORIES (src/)
ADD_EXECUTABLE (bekobrew ${BEKOBREW_SOURCES})
ADD_DEPENDENCIES (bekobrew yaml)
TARGET_LINK_LIBRARIES (bekobrew ${BEKOBREW_LIBS})
INSTALL (TARGETS bekobrew RUNTIME DESTINATION bin/)

#
# Testing Configuration
#
FIND_PACKAGE(GTest)
IF (GTest_FOUND)
  INCLUDE_DIRECTORIES (${GTEST_INCLUDE_DIRS})
ELSE ()
  EXTERNALPROJECT_ADD (googletest
    GIT_REPOSITORY "${VENDOR}/gtest"
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/gtest
    INSTALL_COMMAND ""
    )
  EXTERNALPROJECT_GET_PROPERTY (googletest source_dir)
  INCLUDE_DIRECTORIES (${source_dir}/include)
  EXTERNALPROJECT_GET_PROPERTY (googletest binary_dir)
  LINK_DIRECTORIES (${binary_dir})
  SET (GTEST_BOTH_LIBRARIES gtest gtest_main)
ENDIF ()

FILE (GLOB TESTING_SOURCES ${BEKOBREW_SOURCES} test/*_test.cpp test/*/*_test.cpp)
LIST (REMOVE_ITEM TESTING_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/main.c")
ADD_EXECUTABLE (run_test ${TESTING_SOURCES})
TARGET_LINK_LIBRARIES (run_test
  ${GTEST_BOTH_LIBRARIES}
  pthread
  ${BEKOBREW_LIBS}
  )
